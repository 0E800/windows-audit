<script>
    // Dirty way of making sure we have feedback on the file input :(
    $(function() {
    $(document).on('change', ':file', function() {
        var input = $(this),
            numFiles = input.get(0).files ? input.get(0).files.length : 1,
            label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
        input.trigger('fileselect', [numFiles, label]);
    });
    $(document).ready( function() {
        $(':file').on('fileselect', function(event, numFiles, label) {
            var input = $(this).parents('.input-group').find(':text'),
                log = numFiles > 1 ? numFiles + ' files selected' : label;
            if( input.length ) {
                input.val(log);
                $(':input[id="UploadCsv"]').prop('disabled', false);
            } else {
                $(':input[id="UploadCsv"]').prop('disabled', true);
                if( log ) alert(log);
            }
        });
    });
});
</script>
<br />
<h2>Add Hosts</h2>
<br />
<h4>Use this page to upload a CSV file containing the hosts you wish to scan. For an empty template file please click <a asp-controller="Audit" asp-action="GetTemplate" role="button">here.</a></h4>
<br />
<h4>The hosts CSV file consists of three columns;</h4>
<ul>
  <li><b>Endpoint</b>: This can be an IP address, CIDR block, NetBIOS name or DNS alias.</li>
  <li><b>Operand</b>: This is either an include <b>></b> or exclude <b><</b> chevron, use this to include large CIDR blocks but exclude specific hosts/blocks.</li>
  <li><b>Tags</b>: Tags are a <b>pipe</b> seperated list of <b>key=value</b> pairs to tag the Endpoint(s) with. This data can be used for reconciliation in the analysis phase.</li>
</ul>
<br />
<form method="post" asp-controller="Audit" enctype="multipart/form-data" asp-action="UploadHosts">
    <div>
        <p>Upload Hosts CSV File:</p>
        <div class="row">
            <div class="col-lg-4">
                <div class="input-group">
                    <label class="input-group-btn">
                        <span class="btn btn-primary">
                            Browse&hellip; <input type="file" name="HostsCsvFile" style="display: none;">
                        </span>
                    </label>
                    <input type="text" class="form-control" readonly>
                </div>
            </div>
            <div class="col-lg-4">
                <button id="UploadCsv" class="btn btn-success" type="submit" disabled/>Upload</button>
            </div>
        </div>       
    </div>
</form>
<br />
<div class="row">
    <div class="col-lg-6">
        <h2>Currently Loaded Hosts</h2>
    </div>
    <div class="col-lg-3" style="padding-top: 20px;">
        <a class="btn btn-danger float-right" asp-controller="Audit" asp-action="ClearHosts" role="button">Clear Hosts</a>
    </div>
    <div class="col-lg-3" style="padding-top: 20px;">
        <a class="btn btn-info float-right" asp-controller="Audit" asp-action="ExportHosts" role="button">Download Current Hosts</a>
    </div>
</div>
<br />
<table class="table table-hover">
  <thead>
      <tr>
          <th scope="col">Endpoint</th>
          <th scope="col">Operand</th>
          <th scope="col">Tags</th>
          <th scope="col">Status</th>
          <th scope="col">Errors</th>
      </tr>
  </thead>
  <tbody>
		@foreach (var h in @Model)
		{
            <tr class="table-active">
                <th scope="row">@h.Endpoint</th>
                <td>@h.Operand</td>
                <td class="text-primary">@foreach (string tag in @h.TagsList) {@tag <text><br /></text>}</td>
                <td>@h.StatusString</td>
                <td class="text-danger">@foreach (string err in @h.Errors) {@err <text><br /></text>}</td>
            </tr>
        }
  </tbody>
</table> 